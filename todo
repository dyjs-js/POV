1. app 구성 
- 회원가입 / 로그인 users [v]
    - first name
    - last name
    - avatar
    - name
    - is poster

- 영화 카테고리 movies [v]
    - 영화 이름
    - 리뷰 제목
    - 감독 (필수x)
    - 주연 (필수x)
    - 내용
    - 요약된 결과
    - 생성된 이미지
    - 공유 여부
    - user (FK)

- 책 카테고리 books [v]
    - 리뷰 제목 review_title
    - 책 제목 title
    - 작가
    - 출판사 (필수x)
    - 내용
    - 요약된 결과
    - 생성된 이미지
    - 공유 여부
    - user (FK)

- Common (공통으로 씀) [v]
    - created_at
    - updated_at
    
- medias [v]
    - photo
    - video


- liked [v]
    - payload 
    - books FK
    - movies FK
    - user FK

- gpt create (내가 쓴 리뷰와 책을 바탕으로 이미지 생성)
    - file
    - book FK
    - movie FK


2. todo 
# view.py => 유저가 특정 url에 접근할때 작동하는 함수
4월까지 기본 app api까지 완료
4/29 - liked app 생성 + 나머지 api 완료(users, movies, books, uploads, liked)


4/30
- user 마무리 + 인증 완료 + test 코드 작성 

5/1 
- liked count 함수 작성
- cgpt summary 앱 생성

todo 
- 인증 [v]
- chagpt 요약 [X] - 이미지생성을 할때는 최대한 자세한 내용이 있으면 좋기 때문에 굳이 요약을 할 필요를 못느낌..
                나중에 자동 해시태그로 다시 시도해보기로함
- 이미지 생성 [V] 5/11
- 프론트엔드 [v]
- sign up url만들기 [] 
- 테스트 코드 추가 작성 []
- 자동 해시태그 만들기 []
- movie 연결 []

추가로 하면 좋을 것
- api/v1/liked 만들기 마이페이지에서 좋아요한 리스트들 보기위해서는 필요


5월부터 프론트 시작하면서 기타 기능 추가하기

5/5 
- gpt test 코드 작성 -- > 요약 및 이미지 생성은 가능한데, 키워드 생성 + 이미지로 가는게 낫지 않을까 생각...

5/11
- gpt를 이용한 이미지 생성. prompt는 title , author, content

